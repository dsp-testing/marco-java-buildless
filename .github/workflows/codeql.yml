name: "CodeQL"
on: push

jobs:
  analyze:
    name: Analyze (${{ matrix.language }})
    runs-on: ${{ fromJSON(matrix.runner) }}
    permissions:
      actions: read
      contents: read
      packages: read
      security-events: write
    continue-on-error: false
    strategy:
      fail-fast: false
      matrix:
        include:
          - language: java-kotlin
            category: /language:java-kotlin
            build-mode: none
            runner: '["ubuntu-latest"]'
    env:
      CODE_SCANNING_REF: ${{ github.event.inputs.code_scanning_ref }}
      CODE_SCANNING_IS_ANALYZING_DEFAULT_BRANCH: ${{ github.event.inputs.code_scanning_is_analyzing_default_branch }}
      CODE_SCANNING_IS_STEADY_STATE_DEFAULT_SETUP: true
      CODE_SCANNING_WORKFLOW_FILE: ${{ github.event.inputs.code_scanning_workflow_file }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        tools: https://github.com/github/codeql-action/releases/download/codeql-bundle-v2.18.1/codeql-bundle-linux64.tar.gz
        languages: ${{ matrix.language }}
        build-mode: ${{ matrix.build-mode }}
        queries: "" # Default query suite
        config: |
          default-setup:
            org:
              model-packs: [ ${{ github.event.inputs.code_scanning_codeql_packs }} ]
          threat-models: [  ]

    - name: Setup proxy for registries
      id: proxy
      uses: github/codeql-action/start-proxy@marcogario/proxy_64
      with:
        registries_credentials: ${{ secrets.GH_REGISTRIES_PROXY }}
        
    - name: Autobuild
      uses: github/codeql-action/autobuild@v3

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      env:
        CODEQL_PROXY_HOST: ${{ steps.proxy.outputs.proxy_host }}
        CODEQL_PROXY_PORT: ${{ steps.proxy.outputs.proxy_port }}
        CODEQL_PROXY_CA_CERTIFICATE: ${{ steps.proxy.outputs.proxy_ca_certificate }}
      with:
        category: ${{ matrix.category }}
